name: CI/CD for React App

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build Project
        run: npm run build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout files    
        uses: actions/checkout@v2
        
      - name: Get tag name
        id: get_tag
        uses: olegtarasov/get-tag@v2
        
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      
      - name: Provision Droplet and deploy container
        env:
          GIT_TAG_NAME: ${{ steps.get_tag.outputs.tag }}
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        run: |
          # Provision a new DigitalOcean Droplet with the tag
          doctl compute droplet create "$GIT_TAG_NAME" \
            --image docker-18-04 \
            --size s-1vcpu-1gb \
            --region nyc1 \
            --tag-name "$GIT_TAG_NAME" \
            --user-data-file deploy.sh \
            --wait

          # Wait for the droplet to be ready
          sleep 60

          # Fetch the new droplet IP
          DROPLET_IP=$(doctl compute droplet list --tag-name "$GIT_TAG_NAME" --format PublicIPv4 --no-header)

          # Run docker commands on the new droplet
          ssh -o StrictHostKeyChecking=no root@$DROPLET_IP << 'EOF'
          cd /path/to/your/app
          git pull origin main
          ./deploy.sh
          EOF
